{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\goit-react-hw-04-movies\\\\src\\\\pages\\\\MoviesPage.js\";\nimport PropTypes from \"prop-types\";\nimport { React, Component } from \"react\";\nimport queryString from \"query-string\";\nimport Searchbar from \"../Components/Searchbar\";\nimport { fetchMoviesByQuery } from \"../services/movieApi\";\nimport { Box } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { ReactPaginate } from \"react-paginate\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class CommentList extends Component {\n  render() {\n    let commentNodes = this.props.data.map(function (comment, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comment.comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"project-comments\",\n      className: \"commentList\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: commentNodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCommentList.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      error: null,\n      loading: false,\n      data: [],\n      offset: 0\n    };\n\n    this.handleSearch = querry => {\n      this.props.history.push({ ...this.props.location,\n        search: `?querry=${querry}`\n      });\n    };\n\n    this.handlePageClick = data => {\n      let selected = data.selected;\n      let offset = Math.ceil(selected * this.props.perPage);\n      this.setState({\n        offset: offset\n      }, () => {\n        this.loadCommentsFromServer();\n      });\n    };\n  }\n\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      data: {\n        limit: this.props.perPage,\n        offset: this.state.offset\n      },\n      dataType: \"json\",\n      type: \"GET\",\n      success: data => {\n        this.setState({\n          data: data.comments,\n          pageCount: Math.ceil(data.meta.total_count / data.meta.limit)\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(this.props.url, status, err.toString()); // eslint-disable-line\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer();\n    const {\n      querry\n    } = queryString.parse(this.props.location.search);\n\n    if (querry) {\n      this.setState({\n        loading: true\n      });\n      fetchMoviesByQuery(querry).then(res => this.setState({\n        movies: res.data.results\n      })).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevSearch = prevProps.location.search;\n    const newSearch = this.props.location.search;\n\n    if (prevSearch !== newSearch) {\n      const {\n        querry\n      } = queryString.parse(newSearch);\n      console.log(querry);\n      this.setState({\n        loading: true\n      });\n      fetchMoviesByQuery(querry).then(res => this.setState({\n        movies: res.data.results\n      })).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    }\n  }\n\n  render() {\n    const {\n      movies,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n          onSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Error, \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/movies/${movie.id}`,\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nMoviesPage.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/Misha/Desktop/goit-react-hw-04-movies/src/pages/MoviesPage.js"],"names":["PropTypes","React","Component","queryString","Searchbar","fetchMoviesByQuery","Box","Link","ReactPaginate","$","CommentList","render","commentNodes","props","data","map","comment","index","propTypes","array","isRequired","MoviesPage","state","movies","error","loading","offset","handleSearch","querry","history","push","location","search","handlePageClick","selected","Math","ceil","perPage","setState","loadCommentsFromServer","ajax","url","limit","dataType","type","success","comments","pageCount","meta","total_count","xhr","status","err","console","toString","componentDidMount","parse","then","res","results","catch","finally","componentDidUpdate","prevProps","prevSearch","newSearch","log","message","length","movie","id","title","object"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { React,Component } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport Searchbar from \"../Components/Searchbar\";\r\nimport { fetchMoviesByQuery } from \"../services/movieApi\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReactPaginate } from \"react-paginate\";\r\nimport $ from \"jquery\";\r\n\r\n\r\n\r\nexport class CommentList extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n  };\r\n\r\n  render() {\r\n    let commentNodes = this.props.data.map(function (comment, index) {\r\n      return <div key={index}>{comment.comment}</div>;\r\n    });\r\n\r\n    return (\r\n      <div id=\"project-comments\" className=\"commentList\">\r\n        <ul>{commentNodes}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    error: null,\r\n    loading: false,\r\n    data: [],\r\n    offset: 0,\r\n  };\r\n\r\n  loadCommentsFromServer() {\r\n    $.ajax({\r\n      url: this.props.url,\r\n      data: { limit: this.props.perPage, offset: this.state.offset },\r\n      dataType: \"json\",\r\n      type: \"GET\",\r\n\r\n      success: (data) => {\r\n        this.setState({\r\n          data: data.comments,\r\n          pageCount: Math.ceil(data.meta.total_count / data.meta.limit),\r\n        });\r\n      },\r\n\r\n      error: (xhr, status, err) => {\r\n        console.error(this.props.url, status, err.toString()); // eslint-disable-line\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCommentsFromServer();\r\n    const { querry } = queryString.parse(this.props.location.search);\r\n\r\n    if (querry) {\r\n      this.setState({ loading: true });\r\n      fetchMoviesByQuery(querry)\r\n        .then((res) => this.setState({ movies: res.data.results }))\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevSearch = prevProps.location.search;\r\n    const newSearch = this.props.location.search;\r\n\r\n    if (prevSearch !== newSearch) {\r\n      const { querry } = queryString.parse(newSearch);\r\n      console.log(querry);\r\n      this.setState({ loading: true });\r\n      fetchMoviesByQuery(querry)\r\n        .then((res) => this.setState({ movies: res.data.results }))\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n  }\r\n\r\n  handleSearch = (querry) => {\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `?querry=${querry}`,\r\n    });\r\n  };\r\n\r\n  handlePageClick = (data) => {\r\n    let selected = data.selected;\r\n    let offset = Math.ceil(selected * this.props.perPage);\r\n\r\n    this.setState({ offset: offset }, () => {\r\n      this.loadCommentsFromServer();\r\n    });\r\n  };\r\n  render() {\r\n    const { movies, loading, error } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Searchbar onSearch={this.handleSearch} />\r\n          {loading && <h2>Loading...</h2>}\r\n          {error && <h2>Error, {error.message}</h2>}\r\n          {movies.length > 0 && (\r\n            <ul>\r\n              {movies.map((movie) => (\r\n                <li key={movie.id}>\r\n                  <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMoviesPage.propTypes = {\r\n  history: PropTypes.object,\r\n  location: PropTypes.object,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}