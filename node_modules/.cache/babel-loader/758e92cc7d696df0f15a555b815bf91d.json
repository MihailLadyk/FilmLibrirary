{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\goit-react-hw-04-movies\\\\src\\\\pages\\\\MoviesPage.js\";\nimport PropTypes from 'prop-types';\nimport { Component } from \"react\";\nimport queryString from \"query-string\";\nimport Searchbar from \"../Components/Searchbar\";\nimport { fetchMoviesByQuery } from \"../services/movieApi\";\nimport { Box } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      error: null,\n      loading: false\n    };\n\n    this.handleSearch = querry => {\n      this.props.history.push({ ...this.props.location,\n        search: `?querry=${querry}`\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      querry\n    } = queryString.parse(this.props.location.search);\n\n    if (querry) {\n      this.setState({\n        loading: true\n      });\n      fetchMoviesByQuery(querry).then(res => this.setState({\n        movies: res.data.results\n      })).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevSearch = prevProps.location.search;\n    const newSearch = this.props.location.search;\n\n    if (prevSearch !== newSearch) {\n      const {\n        querry\n      } = queryString.parse(newSearch);\n      console.log(querry);\n      this.setState({\n        loading: true\n      });\n      fetchMoviesByQuery(querry).then(res => this.setState({\n        movies: res.data.results\n      })).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    }\n  }\n\n  render() {\n    const {\n      movies,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      bgColor: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n          onSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Error, \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/movies/${movie.id}`,\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nMoviesPage.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/Misha/Desktop/goit-react-hw-04-movies/src/pages/MoviesPage.js"],"names":["PropTypes","Component","queryString","Searchbar","fetchMoviesByQuery","Box","Link","MoviesPage","state","movies","error","loading","handleSearch","querry","props","history","push","location","search","componentDidMount","parse","setState","then","res","data","results","catch","finally","componentDidUpdate","prevProps","prevSearch","newSearch","console","log","render","message","length","map","movie","id","title","propTypes","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Component } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport Searchbar from \"../Components/Searchbar\";\r\nimport { fetchMoviesByQuery } from \"../services/movieApi\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { querry } = queryString.parse(this.props.location.search);\r\n    if (querry) {\r\n      this.setState({ loading: true });\r\n      fetchMoviesByQuery(querry)\r\n        .then((res) => this.setState({ movies: res.data.results }))\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ loading: false }));\r\n\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevSearch = prevProps.location.search;\r\n    const newSearch = this.props.location.search;\r\n\r\n    if (prevSearch !== newSearch) {\r\n      const { querry } = queryString.parse(newSearch);\r\n      console.log(querry);\r\n      this.setState({ loading: true });\r\n      fetchMoviesByQuery(querry)\r\n        .then((res) => this.setState({ movies: res.data.results }))\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n  }\r\n\r\n  handleSearch = (querry) => {\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `?querry=${querry}`,\r\n    });\r\n  };\r\n  render() {\r\n    const { movies, loading, error } = this.state;\r\n    return (\r\n      <Box bgColor=''>\r\n      <div>\r\n        <Searchbar onSearch={this.handleSearch}  />\r\n        {loading && <h2>Loading...</h2>}\r\n        {error && <h2>Error, {error.message}</h2>}\r\n        {movies.length > 0 && (\r\n          <ul>\r\n            {movies.map((movie) => (\r\n              <li key={movie.id}>\r\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n              </li>\r\n            ))}\r\n            \r\n          </ul>\r\n        )}\r\n      </div>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nMoviesPage.propTypes = {\r\nhistory: PropTypes.object,\r\nlocation: PropTypes.object\r\n}"]},"metadata":{},"sourceType":"module"}