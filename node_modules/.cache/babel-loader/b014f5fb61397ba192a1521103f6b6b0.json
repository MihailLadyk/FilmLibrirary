{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\Code\\\\React\\\\react_hw4\\\\src\\\\pages\\\\MoviesPage.js\";\nimport { Component } from \"react\";\nimport queryString from 'query-string';\nimport Searchbar from \"../Components/Searchbar\";\nimport { fetchMoviesByQuery } from '../services/movieApi';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      error: null,\n      loading: false\n    };\n\n    this.handleSearch = querry => {\n      this.props.history.push({ ...this.props.location,\n        search: `?querry=${querry}`\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevSearch = prevProps.location.search;\n    const newSearch = this.props.location.search;\n\n    if (prevSearch !== newSearch) {\n      const {\n        querry\n      } = queryString.parse(newSearch);\n      console.log(querry);\n      this.setState({\n        loading: true\n      });\n      fetchMoviesByQuery(querry).then(res => this.setState({\n        movies: res.data.results\n      })).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    }\n  }\n\n  render() {\n    const {\n      movies,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n        onSearch: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Error, \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movies/${movie.id}`,\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Misha/Desktop/Code/React/react_hw4/src/pages/MoviesPage.js"],"names":["Component","queryString","Searchbar","fetchMoviesByQuery","Link","MoviesPage","state","movies","error","loading","handleSearch","querry","props","history","push","location","search","componentDidUpdate","prevProps","prevSearch","newSearch","parse","console","log","setState","then","res","data","results","catch","finally","render","message","length","map","movie","id","title"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAClDM,KADkD,GAC1C;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAD0C;;AAAA,SAuBhDC,YAvBgD,GAuBhCC,MAAD,IAAY;AACzB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,EACtB,GAAG,KAAKF,KAAL,CAAWG,QADQ;AAEtBC,QAAAA,MAAM,EAAG,WAAUL,MAAO;AAFJ,OAAxB;AAID,KA5B+C;AAAA;;AAOlDM,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAMC,UAAU,GAAGD,SAAS,CAACH,QAAV,CAAmBC,MAAtC;AACA,UAAMI,SAAS,GAAG,KAAKR,KAAL,CAAWG,QAAX,CAAoBC,MAAtC;;AAEA,QAAIG,UAAU,KAAKC,SAAnB,EAA8B;AAC5B,YAAM;AAAET,QAAAA;AAAF,UAAaV,WAAW,CAACoB,KAAZ,CAAkBD,SAAlB,CAAnB;AACNE,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACM,WAAKa,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAN,MAAAA,kBAAkB,CAACQ,MAAD,CAAlB,CACGc,IADH,CACSC,GAAD,IAAS,KAAKF,QAAL,CAAc;AAAEjB,QAAAA,MAAM,EAAEmB,GAAG,CAACC,IAAJ,CAASC;AAAnB,OAAd,CADjB,EAEGC,KAFH,CAEUrB,KAAD,IAAW,KAAKgB,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd,CAFpB,EAGGsB,OAHH,CAGW,MAAM,KAAKN,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAd,CAHjB;AAID;AACF;;AASDsB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAExB,MAAAA,MAAF;AAAUE,MAAAA,OAAV;AAAmBD,MAAAA;AAAnB,QAA6B,KAAKF,KAAxC;AACA,wBACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKI;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHd,EAIGD,KAAK,iBAAI;AAAA,8BAAYA,KAAK,CAACwB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJZ,EAKGzB,MAAM,CAAC0B,MAAP,GAAgB,CAAhB,iBACC;AAAA,kBACG1B,MAAM,CAAC2B,GAAP,CAAYC,KAAD,iBACV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAA,sBAAkCD,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA/C+C","sourcesContent":["import { Component } from \"react\";\r\nimport queryString from 'query-string'\r\nimport Searchbar from \"../Components/Searchbar\";\r\nimport { fetchMoviesByQuery } from '../services/movieApi'\r\n \r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class MoviesPage extends Component {\r\nstate = {\r\n    movies: [],\r\n    error: null,\r\n    loading: false\r\n}\r\n    \r\ncomponentDidUpdate(prevProps) {\r\n    const prevSearch = prevProps.location.search;\r\n    const newSearch = this.props.location.search;\r\n\r\n    if (prevSearch !== newSearch) {\r\n      const { querry } = queryString.parse(newSearch);\r\nconsole.log(querry)\r\n      this.setState({ loading: true });\r\n      fetchMoviesByQuery(querry)\r\n        .then((res) => this.setState({ movies: res.data.results }))\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n  }\r\n\r\n\r\n  handleSearch = (querry) => {\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `?querry=${querry}`,\r\n    });\r\n  };\r\n  render() {\r\n    const { movies, loading, error } = this.state;\r\n    return (\r\n      <div>\r\n        <Link to='/'>Home</Link>\r\n        <Searchbar onSearch={this.handleSearch} />\r\n        {loading && <h2>Loading...</h2>}\r\n        {error && <h2>Error, {error.message}</h2>}\r\n        {movies.length > 0 && (\r\n          <ul>\r\n            {movies.map((movie) => (\r\n              <li>\r\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}