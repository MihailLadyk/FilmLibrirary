{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\goit-react-hw-04-movies\\\\src\\\\pages\\\\MoviesPage.js\";\nimport PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport queryString from \"query-string\";\nimport Searchbar from \"../Components/Searchbar\";\nimport { fetchMoviesByQuery } from \"../services/movieApi\";\nimport { Box } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { ReactPaginate } from \"react-paginate\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      error: null,\n      loading: false,\n      data: [],\n      offset: 0\n    };\n\n    this.handleSearch = querry => {\n      this.props.history.push({ ...this.props.location,\n        search: `?querry=${querry}`\n      });\n    };\n\n    this.handlePageClick = data => {\n      let selected = data.selected;\n      let offset = Math.ceil(selected * this.props.perPage);\n      this.setState({\n        offset: offset\n      }, () => {\n        this.loadCommentsFromServer();\n      });\n    };\n  }\n\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      data: {\n        limit: this.props.perPage,\n        offset: this.state.offset\n      },\n      dataType: \"json\",\n      type: \"GET\",\n      success: data => {\n        this.setState({\n          data: data.comments,\n          pageCount: Math.ceil(data.meta.total_count / data.meta.limit)\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(this.props.url, status, err.toString()); // eslint-disable-line\n      }\n    });\n  }\n\n  componentDidMount() {\n    const {\n      querry\n    } = queryString.parse(this.props.location.search);\n    this.loadCommentsFromServer();\n\n    if (querry) {\n      this.setState({\n        loading: true\n      });\n      fetchMoviesByQuery(querry).then(res => this.setState({\n        movies: res.data.results\n      })).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevSearch = prevProps.location.search;\n    const newSearch = this.props.location.search;\n\n    if (prevSearch !== newSearch) {\n      const {\n        querry\n      } = queryString.parse(newSearch);\n      console.log(querry);\n      this.setState({\n        loading: true\n      });\n      fetchMoviesByQuery(querry).then(res => this.setState({\n        movies: res.data.results\n      })).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    }\n  }\n\n  render() {\n    const {\n      movies,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSearch: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Error, \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movies/${movie.id}`,\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nMoviesPage.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/Misha/Desktop/goit-react-hw-04-movies/src/pages/MoviesPage.js"],"names":["PropTypes","Component","queryString","Searchbar","fetchMoviesByQuery","Box","Link","ReactPaginate","$","MoviesPage","state","movies","error","loading","data","offset","handleSearch","querry","props","history","push","location","search","handlePageClick","selected","Math","ceil","perPage","setState","loadCommentsFromServer","ajax","url","limit","dataType","type","success","comments","pageCount","meta","total_count","xhr","status","err","console","toString","componentDidMount","parse","then","res","results","catch","finally","componentDidUpdate","prevProps","prevSearch","newSearch","log","render","message","length","map","movie","id","title","propTypes","object"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,eAAe,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDS,KADgD,GACxC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,OAAO,EAAE,KAHH;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,MAAM,EAAE;AALF,KADwC;;AAAA,SAwDhDC,YAxDgD,GAwDhCC,MAAD,IAAY;AACzB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,EACtB,GAAG,KAAKF,KAAL,CAAWG,QADQ;AAEtBC,QAAAA,MAAM,EAAG,WAAUL,MAAO;AAFJ,OAAxB;AAID,KA7D+C;;AAAA,SA+DhDM,eA/DgD,GA+D7BT,IAAD,IAAU;AAC1B,UAAIU,QAAQ,GAAGV,IAAI,CAACU,QAApB;AACA,UAAIT,MAAM,GAAGU,IAAI,CAACC,IAAL,CAAUF,QAAQ,GAAG,KAAKN,KAAL,CAAWS,OAAhC,CAAb;AAEA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,MAAM,EAAEA;AAAV,OAAd,EAAkC,MAAM;AACtC,aAAKc,sBAAL;AACD,OAFD;AAGD,KAtE+C;AAAA;;AAShDA,EAAAA,sBAAsB,GAAG;AACvBrB,IAAAA,CAAC,CAACsB,IAAF,CAAO;AACLC,MAAAA,GAAG,EAAE,KAAKb,KAAL,CAAWa,GADX;AAELjB,MAAAA,IAAI,EAAE;AAAEkB,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWS,OAApB;AAA6BZ,QAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK;AAAhD,OAFD;AAGLkB,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,IAAI,EAAE,KAJD;AAMLC,MAAAA,OAAO,EAAGrB,IAAD,IAAU;AACjB,aAAKc,QAAL,CAAc;AACZd,UAAAA,IAAI,EAAEA,IAAI,CAACsB,QADC;AAEZC,UAAAA,SAAS,EAAEZ,IAAI,CAACC,IAAL,CAAUZ,IAAI,CAACwB,IAAL,CAAUC,WAAV,GAAwBzB,IAAI,CAACwB,IAAL,CAAUN,KAA5C;AAFC,SAAd;AAID,OAXI;AAaLpB,MAAAA,KAAK,EAAE,CAAC4B,GAAD,EAAMC,MAAN,EAAcC,GAAd,KAAsB;AAC3BC,QAAAA,OAAO,CAAC/B,KAAR,CAAc,KAAKM,KAAL,CAAWa,GAAzB,EAA8BU,MAA9B,EAAsCC,GAAG,CAACE,QAAJ,EAAtC,EAD2B,CAC4B;AACxD;AAfI,KAAP;AAiBD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAE5B,MAAAA;AAAF,QAAaf,WAAW,CAAC4C,KAAZ,CAAkB,KAAK5B,KAAL,CAAWG,QAAX,CAAoBC,MAAtC,CAAnB;AACA,SAAKO,sBAAL;;AACA,QAAIZ,MAAJ,EAAY;AACV,WAAKW,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAT,MAAAA,kBAAkB,CAACa,MAAD,CAAlB,CACG8B,IADH,CACSC,GAAD,IAAS,KAAKpB,QAAL,CAAc;AAAEjB,QAAAA,MAAM,EAAEqC,GAAG,CAAClC,IAAJ,CAASmC;AAAnB,OAAd,CADjB,EAEGC,KAFH,CAEUtC,KAAD,IAAW,KAAKgB,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd,CAFpB,EAGGuC,OAHH,CAGW,MAAM,KAAKvB,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAd,CAHjB;AAID;AACF;;AAEDuC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAMC,UAAU,GAAGD,SAAS,CAAChC,QAAV,CAAmBC,MAAtC;AACA,UAAMiC,SAAS,GAAG,KAAKrC,KAAL,CAAWG,QAAX,CAAoBC,MAAtC;;AAEA,QAAIgC,UAAU,KAAKC,SAAnB,EAA8B;AAC5B,YAAM;AAAEtC,QAAAA;AAAF,UAAaf,WAAW,CAAC4C,KAAZ,CAAkBS,SAAlB,CAAnB;AACAZ,MAAAA,OAAO,CAACa,GAAR,CAAYvC,MAAZ;AACA,WAAKW,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAT,MAAAA,kBAAkB,CAACa,MAAD,CAAlB,CACG8B,IADH,CACSC,GAAD,IAAS,KAAKpB,QAAL,CAAc;AAAEjB,QAAAA,MAAM,EAAEqC,GAAG,CAAClC,IAAJ,CAASmC;AAAnB,OAAd,CADjB,EAEGC,KAFH,CAEUtC,KAAD,IAAW,KAAKgB,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd,CAFpB,EAGGuC,OAHH,CAGW,MAAM,KAAKvB,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAd,CAHjB;AAID;AACF;;AAiBD4C,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE9C,MAAAA,MAAF;AAAUE,MAAAA,OAAV;AAAmBD,MAAAA;AAAnB,QAA6B,KAAKF,KAAxC;AACA,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKM;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,EAEGH,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFd,EAGGD,KAAK,iBAAI;AAAA,8BAAYA,KAAK,CAAC8C,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHZ,EAIG/C,MAAM,CAACgD,MAAP,GAAgB,CAAhB,iBACC;AAAA,kBACGhD,MAAM,CAACiD,GAAP,CAAYC,KAAD,iBACV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAA,sBAAkCD,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,WAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA1F+C;AA6FlDrD,UAAU,CAACuD,SAAX,GAAuB;AACrB7C,EAAAA,OAAO,EAAEnB,SAAS,CAACiE,MADE;AAErB5C,EAAAA,QAAQ,EAAErB,SAAS,CAACiE;AAFC,CAAvB","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport Searchbar from \"../Components/Searchbar\";\r\nimport { fetchMoviesByQuery } from \"../services/movieApi\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReactPaginate } from \"react-paginate\";\r\nimport $ from \"jquery\";\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    error: null,\r\n    loading: false,\r\n    data: [],\r\n    offset: 0,\r\n  };\r\n\r\n  loadCommentsFromServer() {\r\n    $.ajax({\r\n      url: this.props.url,\r\n      data: { limit: this.props.perPage, offset: this.state.offset },\r\n      dataType: \"json\",\r\n      type: \"GET\",\r\n\r\n      success: (data) => {\r\n        this.setState({\r\n          data: data.comments,\r\n          pageCount: Math.ceil(data.meta.total_count / data.meta.limit),\r\n        });\r\n      },\r\n\r\n      error: (xhr, status, err) => {\r\n        console.error(this.props.url, status, err.toString()); // eslint-disable-line\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { querry } = queryString.parse(this.props.location.search);\r\n    this.loadCommentsFromServer();\r\n    if (querry) {\r\n      this.setState({ loading: true });\r\n      fetchMoviesByQuery(querry)\r\n        .then((res) => this.setState({ movies: res.data.results }))\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevSearch = prevProps.location.search;\r\n    const newSearch = this.props.location.search;\r\n\r\n    if (prevSearch !== newSearch) {\r\n      const { querry } = queryString.parse(newSearch);\r\n      console.log(querry);\r\n      this.setState({ loading: true });\r\n      fetchMoviesByQuery(querry)\r\n        .then((res) => this.setState({ movies: res.data.results }))\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n  }\r\n\r\n  handleSearch = (querry) => {\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `?querry=${querry}`,\r\n    });\r\n  };\r\n\r\n  handlePageClick = (data) => {\r\n    let selected = data.selected;\r\n    let offset = Math.ceil(selected * this.props.perPage);\r\n\r\n    this.setState({ offset: offset }, () => {\r\n      this.loadCommentsFromServer();\r\n    });\r\n  };\r\n  render() {\r\n    const { movies, loading, error } = this.state;\r\n    return (\r\n      <div>\r\n        <Searchbar onSearch={this.handleSearch} />\r\n        {loading && <h2>Loading...</h2>}\r\n        {error && <h2>Error, {error.message}</h2>}\r\n        {movies.length > 0 && (\r\n          <ul>\r\n            {movies.map((movie) => (\r\n              <li key={movie.id}>\r\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n              </li>\r\n            ))}\r\n            \r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMoviesPage.propTypes = {\r\n  history: PropTypes.object,\r\n  location: PropTypes.object,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}